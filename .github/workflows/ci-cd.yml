name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  test:
    name: Run Newman Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install Newman and Reporters
      run: |
        npm install -g newman
        npm install -g newman-reporter-html
        npm install -g newman-reporter-htmlextra
    
    - name: Create reports directory
      run: mkdir -p newman-reports
    
    - name: Start Test Server (if needed)
      run: |
        # If you have a test server, start it here
        # Example: npm start &
        # sleep 10
        echo "Skipping server start - using external API or mock server"
      continue-on-error: true
    
    - name: Run Newman Tests
      run: |
        # Find the correct collection and environment files
        COLLECTION=$(find postman -name "*node-e2e*" | head -1)
        ENVIRONMENT=$(find postman -name "*waz-warunk*" | head -1)
        
        if [ -z "$COLLECTION" ] || [ -z "$ENVIRONMENT" ]; then
          echo "Collection or environment file not found"
          echo "Available files in postman directory:"
          ls -la postman/
          exit 1
        fi
        
        echo "Using collection: $COLLECTION"
        echo "Using environment: $ENVIRONMENT"
        
        newman run "$COLLECTION" \
          --environment "$ENVIRONMENT" \
          --iteration-count 5 \
          --reporters cli,json,junit \
          --reporter-json-export newman-reports/newman-report.json \
          --reporter-junit-export newman-reports/newman-report.xml \
          --timeout-request 30000 \
          --delay-request 1000
      continue-on-error: true
    
    - name: Upload Newman Reports
      uses: actions/upload-artifact@v4
      with:
        name: newman-test-reports
        path: newman-reports/
        retention-days: 30
    
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: newman-reports/newman-report.xml

  deploy-pages:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: test
    if: always() && github.ref == 'refs/heads/main'
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: main
    
    - name: Check if performance report exists
      id: check-performance
      run: |
        if [ -f "performance/performance-report.html" ]; then
          echo "performance_exists=true" >> $GITHUB_OUTPUT
          echo "Performance report found"
        else
          echo "performance_exists=false" >> $GITHUB_OUTPUT
          echo "Performance report not found"
        fi
    
    - name: Setup Pages (with performance report)
      if: steps.check-performance.outputs.performance_exists == 'true'
      uses: actions/configure-pages@v4
    
    - name: Create pages directory and copy performance report
      if: steps.check-performance.outputs.performance_exists == 'true'
      run: |
        mkdir -p _site
        cp performance/performance-report.html _site/index.html
        # Copy any additional assets if they exist
        if [ -d "performance/assets" ]; then
          cp -r performance/assets _site/
        fi
        # Add basic styling if missing
        echo "<style>body{font-family:Arial,sans-serif;margin:40px;}</style>" > temp_style.html
        cat _site/index.html >> temp_style.html
        mv temp_style.html _site/index.html
    
    - name: Create simple index if no performance report
      if: steps.check-performance.outputs.performance_exists == 'false'
      run: |
        mkdir -p _site
        cat > _site/index.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
            <title>Test Results</title>
            <style>body{font-family:Arial,sans-serif;margin:40px;}</style>
        </head>
        <body>
            <h1>API Test Results</h1>
            <p>No performance report available yet.</p>
            <p>Add <code>performance/performance-report.html</code> to enable performance reporting.</p>
        </body>
        </html>
        EOF
    
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: '_site'
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4